{
  "name": "@vendia/serverless-express",
  "version": "3.4.0-rc3",
  "description": "This library enables you to utilize AWS Lambda and Amazon API Gateway to respond to web and API requests using your existing Node.js application framework.",
  "keywords": [
    "aws",
    "serverless",
    "api",
    "api gateway",
    "lambda",
    "express",
    "http"
  ],
  "homepage": "https://github.com/vendia/serverless-express",
  "bugs": {
    "url": "https://github.com/vendia/serverless-express/issues"
  },
  "license": "Apache-2.0",
  "files": [
    "lib/**/*"
  ],
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/vendia/serverless-express.git"
  },
  "engines": {
    "node": ">=6"
  },
  "release": {
    "verifyConditions": [
      "@semantic-release/changelog",
      "@semantic-release/npm",
      "@semantic-release/git",
      "@semantic-release/github"
    ],
    "plugins": [
      [
        "@semantic-release/changelog",
        {
          "changelogFile": "CHANGELOG.md"
        }
      ],
      [
        "@semantic-release/npm",
        {
          "npmPublish": true,
          "tarballDir": "dist"
        }
      ],
      [
        "@semantic-release/git",
        {
          "assets": [
            "package.json",
            "package-lock.json",
            "CHANGELOG.md",
            "dist/**/*.{js|css}"
          ],
          "message": "chore(release): version ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
        }
      ],
      [
        "@semantic-release/github",
        {
          "assets": "dist/*.tgz"
        }
      ]
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged && npm run install-example-dependencies && npm test",
      "commit-msg": "commitlint -e $GIT_PARAMS"
    }
  },
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ],
    "rules": {
      "body-max-line-length": [
        2,
        "always",
        240
      ]
    }
  },
  "eslintIgnore": [
    "examples/*/node_modules"
  ],
  "jest": {
    "collectCoverageFrom": [
      "src/*"
    ]
  },
  "devDependencies": {
    "@commitlint/config-conventional": "^11.0.0",
    "@commitlint/travis-cli": "^11.0.0",
    "@semantic-release/changelog": "^5.0.0",
    "@semantic-release/git": "^9.0.0",
    "@semantic-release/npm": "^7.0.5",
    "@types/jest": "^26.0.13",
    "@types/media-typer": "^1.1.0",
    "@types/mime-types": "^2.1.0",
    "@types/type-is": "^1.6.3",
    "commitizen": "^4.2.2",
    "commitlint": "^11.0.0",
    "cz-conventional-changelog": "^2.1.0",
    "dot-prop": ">=4.2.1",
    "eslint": "^6.8.0",
    "eslint-config-standard": "^14.1.1",
    "eslint-plugin-import": "^2.20.1",
    "eslint-plugin-node": "^11.0.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.1",
    "husky": "^0.15.0-rc.4",
    "jest": "^26.4.2",
    "jest-cli": "^26.4.2",
    "lint-staged": "^7.2.0",
    "lodash": ">=4.17.19",
    "prettier": "^2.1.1",
    "semantic-release": "^17.2.3",
    "ts-jest": "^26.3.0",
    "tscpaths": "0.0.9",
    "tslint": "^6.1.3",
    "tslint-config-prettier": "^1.18.0",
    "tslint-plugin-prettier": "^2.3.0",
    "typescript": "^4.1.3"
  },
  "scripts": {
    "test": "jest",
    "test:watch": "jest --watch",
    "coverage": "jest --coverage",
    "cz": "git-cz",
    "build": "tsc --project tsconfig.json && tscpaths -p tsconfig.json -s ./src -o ./lib",
    "format": "prettier --write \"src/**/*.ts\"",
    "lint": "tslint -p tsconfig.json && eslint examples",
    "prepublishOnly": "npm test && npm run lint",
    "preversion": "npm run lint",
    "version": "npm run format && git add -A src",
    "postversion": "git push && git push --tags",
    "deploy": "npm publish",
    "release": "semantic-release",
    "release-local": "node -r dotenv/config node_modules/semantic-release/bin/semantic-release --no-ci --dry-run",
    "check-dependencies": "npx npm-check --skip-unused --update",
    "install-example-dependencies": "cd examples && npm install --prefix basic-starter basic-starter && cd .."
  },
  "dependencies": {
    "binary-case": "^1.0.0",
    "type-is": "^1.6.16"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  }
}
